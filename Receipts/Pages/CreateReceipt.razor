@page "/createreceipt"

@using Models
@inject Data.DataBase.DataContext _context
@inject Data.Services.ReceiptService _receiptService
@inject NavigationManager NavManager

<h1>Inserir Receita</h1>

<p>Mostre sua receita para o mundo todo.</p>

<EditForm Model="@receipt" OnValidSubmit ="@ReceiptIn" >
    <div class = "form-group">
    <label>Nome </label>
    <InputText id="Name" @bind-Value="receipt.Name">nome</InputText>
    </div>
    <br>
    <div class = "form-group">
    <label>Descrição </label>
        <div class="col-4">
            <InputText id="Description" @bind-Value="receipt.Description">Descrição</InputText>
        </div>
        <label>Imagem </label>
        <InputText size = "30px"id="Description" @bind-Value="receipt.ImageUrl">imagem</InputText>
    </div>
    <br>
    <h2>Ingredientes</h2>
    <br>
    <div class = "form-group">
        <div class = "form-group">
            <button type="button" class="btn btn-secondary"
            @onclick="@(()=>ingredients.Add(new IngredientRecipe()))">+ ingrediente</button>
        @for(int i = 0 ; i < ingredients.Count(); i++ )
        {
            var index = i;
            var _ingredient = ingredients[i];

            <p>ingrediente : <InputText id="Ingredients@i" @bind-Value="@_ingredient.Ingredient"> Ingredients@i</InputText> 
            quantidade: <InputText id="quantidade@i" @bind-Value="@_ingredient.Quantity"> quantidade@i</InputText> 
            <button type = "button" class="btn btn-danger" @onclick="@(() => ingredients.RemoveAt(index))"
                >-</button>
                </p>
        }
        </div>
        <br><br>
        <h2>Passos</h2>
        <div class = "form-group">
            <button type="button" class="btn btn-secondary"
            @onclick="@(()=>steps.Add(new StepRecipe()))">+ passos</button>
        @for(int j = 0 ; j < steps.Count(); j++ )
        {
            var indexP = j;
            var _step = steps[j];
            //StepRecipe step =  new StepRecipe();

            <p>Passo @j: <InputText id="Steps@i" @bind-Value="@_step.Step"> </InputText> 
            <button type = "button" class="btn btn-danger" @onclick="@(() => steps.RemoveAt(indexP))"
                >-</button></p>
        }
        </div>
    </div>
    <button type="submit" class="btn btn-primary" >Submit</button>
</EditForm>


@code {
    private Receipt receipt = new Receipt();
    private List<StepRecipe> steps = new List<StepRecipe>();
    private StepRecipe step = new StepRecipe();
    private List<IngredientRecipe> ingredients = new List<IngredientRecipe>();
    private IngredientRecipe ingredient = new IngredientRecipe();
    private string stepValue;
    private int stepCount = 0;
    private bool moreValues = true;
    const int cMaxNumbers = 10;

    private async Task ReceiptIn()
    {
        await _receiptService.Create(receipt.Name,
        receipt.Description,
        steps, 
        ingredients,
        receipt.ImageUrl);
        NavManager.NavigateTo("/createreceipt");
    }

    private void AddStep()
    {
        steps.Add(step);
    }

    private void AddIngredient()
    {
        ingredients.Add(ingredient);
    }


    private void Startstop()
    {
        moreValues = !moreValues;
    }
}
