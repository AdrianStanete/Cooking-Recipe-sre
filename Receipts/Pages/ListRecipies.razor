@page "/listrecipes"

@using Models
@inject Data.Services.ReceiptService _receiptService
@inject NavigationManager NavManager

<h1>Suas Receitas</h1>

<p>Visualize aqui suas receitas</p>

@if (receipts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="table-responsive-sm">
    <table class="table table-striped">     
        <thead>
            <tr>
                <th>Nome</th>
                <th>Data</th>
                <th>Ações</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var receipt in receipts)
            {
                var receiptId = receipt.Id;
                <tr>
                    <td>@receipt.Name</td>
                    <td>@receipt.CreatedDate</td>
                    <td>
                        <button type = "button" class="btn btn-danger" @onclick="@(() => DeleteRecipe(receipt.Id))">Deletar</button>
                        <button type = "button" class="btn btn-primary" >editar</button>
                        <button type = "button" class="btn btn-success" @onclick="@(() => GoToDetail(receipt.Id))">Visualizar</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    </div>
    
}
@code {
    private List<Recipe> receipts = new List<Recipe>();

    protected override async Task OnInitializedAsync()
    {
        receipts = await _receiptService.ListAll();
    }

    private async Task DeleteRecipe(Guid id)
    {
        await _receiptService.DeleteReceipt(id);
        NavManager.NavigateTo("/listrecipes");
    }

    private async Task GoToDetail(Guid id)
    {
        NavManager.NavigateTo($"/recipe/{id}");
    }
}
